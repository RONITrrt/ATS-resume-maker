# -*- coding: utf-8 -*-
"""ATS Resume.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eq5kiN7xhBOjbS9zZ5kOi9tTcF_4C0mt
"""

!pip install transformers torch gradio python-docx
!pip install spacy
!python -m spacy download en_core_web_sm

import spacy
import gradio as gr
from docx import Document
from io import BytesIO
from transformers import pipeline
nlp = spacy.load('en_core_web_sm')

fill_mask = pipeline("fill-mask", model="bert-base-uncased")

def bert_suggest_replacements(text):
    suggestions = []
    words = text.split()
    improved_text = text
    for i, word in enumerate(words):
        masked_sentence = improved_text.replace(word, "[MASK]", 1)
        try:
            prediction = fill_mask(masked_sentence)
            best_suggestion = prediction[0]['token_str']
            if best_suggestion != word:
                improved_text = improved_text.replace(word, best_suggestion, 1)
                suggestions.append(f"Suggested '{best_suggestion}' instead of '{word}'")
        except Exception as e:
            print(f"Could not process the word '{word}': {e}")
            continue
    return improved_text, suggestions

def extract_text_from_docx(docx_file):
    doc = Document(docx_file)
    full_text = []
    for para in doc.paragraphs:
        full_text.append(para.text)
    return '\n'.join(full_text)

def save_updated_resume(text):
    doc = Document()
    for line in text.split('\n'):
        doc.add_paragraph(line)
    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    return buffer

def process_resume(file):
    resume_text = extract_text_from_docx(file)
    updated_text, suggestions = bert_suggest_replacements(resume_text)
    updated_resume = save_updated_resume(updated_text)
    return updated_text, '\n'.join(suggestions), updated_resume

# Update the Gradio interface using gr.File for file input and gr.Textbox for text output
iface = gr.Interface(
    fn=process_resume,
    inputs=gr.File(label="Upload your resume (.docx only)", file_types=[".docx"]),  # Updated File input
    outputs=[
        gr.Textbox(label="Updated Resume Text"),  # Updated Textbox output for showing updated text
        gr.Textbox(label="Suggestions for Improvements"),  # Updated Textbox output for showing suggestions
        gr.File(label="Download Updated Resume (.docx)")  # File output for downloading the resume
    ],
    title="Advanced ATS Resume Optimizer",
    description="Upload your resume in .docx format. We will analyze and suggest better words using BERT, and allow you to download the improved resume."
)

# Launch the interface
iface.launch()